
################################################################################
# Last updated on 15-01-2022
# This is the sample configuration file for Backupbot.
#
# Backupbot automatically sources /usr/local/etc/backupbot.conf.Either copy
# this sample configuration file to that directory or create your own file.
# Adjust to taste and requirements.
#
# /usr/local/etc/backupbot.conf should be owned and readable by root (chmod 500).
################################################################################

################################################################################
# Automatic backup
################################################################################

# backupbot can backup periodically based on a cronjob. To enable this feature
# set AUTOMATIC_BACKUP_ENABLE='YES', edit AUTOMATIC_BACKUP_CRON to taste and run
# backupbot --cron to effectuate the changes to cron.
AUTOMATIC_BACKUP_ENABLE='NO'
AUTOMATIC_BACKUP_CRON='0 3 * * *'

# To enable encryption, set BACKUP_ENCRYPTION='YES' and add your secret to
# BACKUP_ENCRYPTION_SECRET. Always test decryption of the backup, e.g. by running
# 'gpg -d archive.tar.gz.gpg | tar -xvzf -'
BACKUP_ENCRYPTION='NO'
BACKUP_ENCRYPTION_SECRET=''

################################################################################
# Feature backup files
################################################################################

# Set BACKUP_FILES_ENABLE='YES' to enable backups of files.
BACKUP_FILES_ENABLE='NO'

# Set BACKUP_FILES_RETENTION to the number of days you wish to keep the backups.
# Use 0 for a infinite retention.
BACKUP_FILES_RETENTION='0'

# Set BACKUP_COMPRESSION to 0 (disable compression], 1 (gzip), 2 (bzip2), 3 (xz).
# If you want compression but don't know what to choose, pick 1 (gzip).
BACKUP_FILES_COMPRESSION='0'

# Set BACKUP_FILES_DESTINATION to the folder where you want to store the backups.
# Note that there should be NO trailing / on the end of the folder name.
BACKUP_FILES_DESTINATION='/var/tmp'

# Set BACKUP_FILES to the folders and files that are part of the backup. Note
# that all entries should be seperated from each other with a space and that
# there should be no trailing / on the end of the folder names.
# A multiline list can also be made by using backslash newline and spaces.
#BACKUP_FILES='/etc /usr/local/etc /usr/local/www'      # default webserver backup
#BACKUP_FILES='/home /root'                             # home directories
#BACKUP_FILES='/var/log'                                # log directory
BACKUP_FILES='/etc /usr/local/etc'                      # basic configuration file backup

# Set BACKUP_FILES_PREFIX to customize the variable part of the file name. The default
# looks like '220123T0400-files.tar'
BACKUP_FILES_PREFIX="$(date +%y%m%dT%H%M%S)"

################################################################################
# Feature backup mysql databases
################################################################################

# MySQL can authenticate unattended by creating a *.cnf file in /usr/local/etc/mysql
# with the following content (this is required for this feature):
# [client]
# user='root'
# password='password'

# Set BACKUP_MYSQL_ENABLE='YES' to enable backups of MySQL databases.
BACKUP_MYSQL_ENABLE='NO'

# Set BACKUP_MYSQL_RETENTION to the number of days you wish to keep the backups.
# Use 0 for a infinite retention.
BACKUP_MYSQL_RETENTION='0'

# Set BACKUP_COMPRESSION to 0 (disable compression], 1 (gzip), 2 (bzip2), 3 (xz).
# If you want compression but don't know what to choose, pick 1 (gzip).
BACKUP_MYSQL_COMPRESSION='0'

# Set BACKUP_MYSQL_DESTINATION to the folder where you want to store the backups.
# Note that there should be NO trailing / on the end of the folder name.
BACKUP_MYSQL_DESTINATION='/var/tmp'

# Set BACKUP_MYSQL_PREFIX to customize the variable part of the file name. The default
# looks like '220123T0400-database_name.tar'
BACKUP_MYSQL_PREFIX="$(date +%y%m%dT%H%M%S)"
